// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import edu.wpi.first.wpilibj.ADXRS450_Gyro;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.drive.MecanumDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.Spark;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Spark leftFrontMC;
private Spark leftRearMC;
private Spark rightFrontMC;
private Spark rightRearMC;
private MecanumDrive mecanumDrive1;
private ADXRS450_Gyro gyro1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftFrontMC = new Spark(2);
 addChild("leftFrontMC",leftFrontMC);
 leftFrontMC.setInverted(false);

leftRearMC = new Spark(3);
 addChild("leftRearMC",leftRearMC);
 leftRearMC.setInverted(false);

rightFrontMC = new Spark(0);
 addChild("rightFrontMC",rightFrontMC);
 rightFrontMC.setInverted(true);

rightRearMC = new Spark(1);
 addChild("rightRearMC",rightRearMC);
 rightRearMC.setInverted(true);

mecanumDrive1 = new MecanumDrive(leftFrontMC, leftRearMC,
rightFrontMC, rightRearMC);
 addChild("Mecanum Drive 1",mecanumDrive1);
 mecanumDrive1.setSafetyEnabled(true);
mecanumDrive1.setExpiration(0.1);
mecanumDrive1.setMaxOutput(1.0);


gyro1 = new ADXRS450_Gyro();
 addChild("Gyro 1", gyro1);
 //ADXRS450_Gyro.setSensitivity(0.007); 
 //(Is there an equivalent of this that we need)


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    }


    @Override
    public void periodic() {
        // This method will be called once per scheduler run
       SmartDashboard.putNumber("GyroAngle", gyro1.getAngle());
       SmartDashboard.putBoolean("Gyro connected", gyro1.isConnected());
       SmartDashboard.putNumber("Gyro port", gyro1.getPort());
    } 

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void driveRobot(double ySpeed, double xSpeed, double zRotation){
        mecanumDrive1.driveCartesian(ySpeed, xSpeed, zRotation, gyro1.getAngle());
    }
}

